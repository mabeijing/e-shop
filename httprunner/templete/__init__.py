import jinja2

__TEMPLATE__ = jinja2.Template(
    """# NOTE: Generated By HttpRunner v{{ version }}
# FROM: {{ testcase_path }}
{% if marks %}
import pytest
{%- endif -%}
{% if testcase_title %}
import allure
{% endif %}

{%- if imports_list -%}
import sys
from pathlib import Path
{% endif %}

from httprunner import Parameters
from httprunner import HttpRunner, Config, Step
{% for import_str in imports_list %}
{{ import_str }}
{% endfor %}

{% if marks %}
@pytest.mark.{{ marks }}
{%- endif -%}
{% if testcase_title %}
@allure.title("{{ testcase_title }}")
{%- endif -%}
{% if parameters %}
@pytest.mark.parametrize('params', Parameters({{parameters}}))
{%- endif %}
def {{ function_name }}({% if parameters %}params, {%- endif %}):
    config = {{ config_chain_style }}

    test_steps = [
        {% for step_chain_style in teststeps_chain_style -%}
            {{ step_chain_style }},
        {%- endfor %}
    ]
    TestCase({% if function_args %}driver=driver, {% endif %}config=config, test_steps=test_steps{% if parameters %}, params=params{% endif %}).run()

if __name__ == "__main__":
    pytest.maim(['-v', '.'])

"""
)
if __name__ == '__main__':
    data = {
        "version": '1.0.0',
        "testcase_path": r'C:\Users\ducker\PycharmProjects\projects\e-shop\httprunner\templete\testcase.py',
        "testcase_title": "demo",
        "module_name": 'test_demo.py',
        "function_name": f"test_demo",
        "marks": "level1",
        "imports_list": ['from httprunner import TestCase'],
        "config_chain_style": 123,
        # "parameters": 'params',
        "teststeps_chain_style": [
            1, 2, 3
        ],
    }
    content = __TEMPLATE__.render(data)
    print(content)
