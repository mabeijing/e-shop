import jinja2

__TEMPLATE__ = jinja2.Template(
    """# NOTE: Generated By HttpRunner v{{ version }}
# FROM: {{ testcase_path }}

{% if imports_list and diff_levels > 0 %}
import sys
from pathlib import Path
sys.path.insert(0, str(Path(__file__){% for _ in range(diff_levels) %}.parent{% endfor %}))
{% endif %}

{% if parameters %}
import pytest
from httprunner import Parameters
{% endif %}

from httprunner import HttpRunner, Config, Step, RunRequest, RunTestCase
{% for import_str in imports_list %}
{{ import_str }}
{% endfor %}

{% if parameters %}
@pytest.mark.parametrize("param", Parameters({{parameters}}))
{% endif %}
def {{ class_name }}({% if parameters %}param{% endif %}):
    config = {{ config_chain_style }}
    teststeps = [
            {% for step_chain_style in teststeps_chain_style %}
                {{ step_chain_style }},
            {% endfor %}
        ]

    httprunner = HttpRunner()
    httprunner.config = config
    httprunner.teststeps = teststeps
    httprunner.run()
    return httprunner


if __name__ == "__main__":
    {{ class_name }}()

"""
)

__all__ = ['__TEMPLATE__']
